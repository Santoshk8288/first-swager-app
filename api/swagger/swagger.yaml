swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: 192.168.88.50:8080
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /adduser:
    x-swagger-router-controller: user
    post:
      operationId: createUser
      description: add a new user to the list
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /listusers:
    x-swagger-router-controller: user
    get:
      operationId: getAllUsers
      description: get the users list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: user
    post:
      operationId: loginUser
      description: check user 
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: user
    post:
      operationId: logoutUser
      description: logout user 
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/logoutUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLogoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateuser:
    x-swagger-router-controller: user
    post:
      operationId: updateUser
      description: add a new user to the list
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /deleteuser:
    x-swagger-router-controller: user
    post:
      operationId: deleteUser
      description: delete user 
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/deleteUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRemovedUser"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  User:
    type: object
    properties:
      title:
        type: string
        description: task object name
      password:
        type: string
        description: task description
      cpassword:
        type: string
        description: task description
  GetUsersListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            title:
              type: string
  loginUser:
    type: object
    properties:
      title:
        type: string
        description: task object name
      password:
        type: string
        description: task description
  GetLoginResponse:
    type: object
    properties:
      title:
        type: string
        description: task object name
      login:
        type: string
        description: task description
  logoutUser:
    type: object
    properties:
      id:
        type: string
        description: task object name
  GetLogoutResponse:
    type: object
    properties:
      title:
        type: string
        description: task object name
      login:
        type: string
        description: task description
  UpdateUser:
    type: object
    properties:
      id:
        type: string
        description: id
      title:
        type: string
        description: task object name
      password:
        type: string
        description: task description
  deleteUser:
    type: object
    properties:
      id:
        type: string
        description: task object name
  GetRemovedUser:
    type: object
    properties:
      title:
        type: string
        description: task object name
      login:
        type: string
        description: task description
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
